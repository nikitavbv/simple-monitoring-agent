name: Rust

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    services:
      postgres:
        image: postgres:11-alpine
        env:
          POSTGRES_USER: monitoring_ci_user
          POSTGRES_PASSWORD: monitoring_ci_password
          POSTGRES_DB: monitoring
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v1
    - name: Setup database
      run: apt update && apt install -y postgresql-client && psql -h postgres -U monitoring_ci_user -d monitoring -a -f schema.sql
      env:
        PGPASSWORD: monitoring_ci_password
    - name: Run tests
      run: rustup install nightly && rustup default nightly && cargo test
      env:
        DATABASE_URL: postgres://monitoring_ci_user:monitoring_ci_password@postgres:5432/monitoring
    #-  name: Clippy check
      # env:
      #   DATABASE_URL: postgres://monitoring_ci_user:monitoring_ci_password@postgres:5432/monitoring
      #run: rustup component add clippy && cargo clippy --all-targets --all-features -- -D warnings
    - name: Build
      run: cargo build --release
      env:
        DATABASE_URL: postgres://monitoring_ci_user:monitoring_ci_password@postgres:5432/monitoring
    - name: Publish docker image to Github Packages
      uses: HurricanKai/Publish-Docker-Github-Action@master
      with:
        name: docker.pkg.github.com/nikitavbv/simple-monitoring-agent/agent
        registry: docker.pkg.github.com 
        username: ${{ secrets.GITHUB_TOKEN }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish docker image to Docker Hub
      uses: HurricanKai/Publish-Docker-Github-Action@master
      with:
        name: nikitavbv/monitoring_agent
        registry: docker.io
        username: nikitavbv
        password: ${{ secrets.docker_hub_token }}
